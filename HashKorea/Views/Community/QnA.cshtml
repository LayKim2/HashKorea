@model List<HashKorea.DTOs.Common.GetPostsResponseDto>

@{
    ViewData["Title"] = "QnA";
}

@section Styles {
    <link rel="stylesheet" href="~/css/Community/QnA.css" />
}

<div class="board-container">
    <div class="result-header">
        <h2 class="result-count"> Q&A <span class="highlight"></span></h2>
        @if (User.Identity.IsAuthenticated) {
            <form asp-area="" asp-controller="User" asp-action="Post" method="get">
                <input type="hidden" name="type" value="@HashKorea.Common.Constants.POST_TYPE.QNA" />
                <button type="submit" class="post-button">Post</button>
            </form>
        }
        
    </div>
    <div class="post-list">

        @if (Model != null && Model.Any())
        {
            foreach (var post in Model)
            {

                <div class="post-item">
                    <div class="post-avatar">
                        <div class="avatar-circle">SO</div>
                    </div>
                    <div class="post-main">
                        <div class="post-header">
                            <span class="author">@post.UserName</span>
                            <span class="post-date">posted @post.RelativeTime</span>
                        </div>
                        <h3 class="post-title">@post.Title</h3>
                        <div class="post-content">
                            @Html.Raw(post.Content);
                        </div>
                    </div>
                    <div class="post-actions">
                        <div class="action-group">
                            <span class="likes"><i class="bi bi-hand-thumbs-up"></i> 2</span>
                            <span class="comments"><i class="bi bi-chat"></i> 0</span>
                        </div>
                        <button class="toggle-btn">
                            <i class="bi bi-chevron-down"></i>
                        </button>
                    </div>
                </div>
            }
        }

    </div>
</div>

<script>
    const postItems = document.querySelectorAll('.post-item');

    postItems.forEach(item => {
        const toggleBtn = item.querySelector('.toggle-btn');
        const content = item.querySelector('.post-content');
        const actions = item.querySelector('.post-actions');
        const icon = toggleBtn.querySelector('i');

        // post-item 전체 영역에 클릭 이벤트 추가
        item.addEventListener('click', () => {
            content.classList.toggle('show');
            actions.classList.toggle('hide');
            icon.classList.toggle('bi-chevron-up');
            icon.classList.toggle('bi-chevron-down');
        });

        // toggle-btn에 클릭 이벤트 추가
        toggleBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            content.classList.toggle('show');
            actions.classList.toggle('hide');
            icon.classList.toggle('bi-chevron-up');
            icon.classList.toggle('bi-chevron-down');
        });

        // 좋아요, 댓글 버튼 등 다른 버튼들의 이벤트 전파 중지
        const actionButtons = item.querySelectorAll('.action-group span');
        actionButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                e.stopPropagation();
            });
        });
    });


</script>

